let path = require('path');
let i2cBus = require('../../dist/i2c.mock.js');
let os = require('os');
let obs = null;

// If working on raspberry-pi.
if (os.arch() == 'arm') {
    i2cBus = require('i2c-bus');
    obs = i2cBus.openSync(1);
}

require('dotenv').config({path: path.resolve(process.cwd(), 'config/production/.env')});

const config = {
    logger: {
        level: 'debug',
    },
    secure_api: true,
    ledDriver : {
        driver_type: 'i2c',
        driver : {
            i2c: obs,
            address: 0x40,
            frequency: 4800,
            debug: false,
        },
        contours : {
            main : {
                warmWhite: 0,
                coldWhite: 1,
                green: 2,
                red: 3,
                blue: 4,
            }
        },
        hardwareLoader: true,
    },
    ledTimer: {
        database: {
            path: process.env.LED_TIMER_DB_PATH || '/home/tangerine/tangerine-nest/mandarinas-settings',
        },
        hardwareLoader: true,
    },
    bme280: {
        i2cBusNo: 1,
        i2cAddress: 0x76,
        hardwareLoader: true,
    },
    lightLvl: {
        address: 0x4A,
        hardwareLoader: true,
    },
    sensorData: {
        database: {
            path: '/home/tangerine/tangerine-nest/mandarinas-settings',
        }
    },
    settingsDb: {
        path: '/home/tangerine/tangerine-nest/mandarinas-settings',
    },
    neopixel: {
        lenght: 5,
    },
    activeEnv: process.env.NODE_ENV || 'production',
};

module.exports = config;
